<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mall.b2bp.daos.parm.ParmModelMapper" >
  <resultMap id="BaseResultMap" type="com.mall.b2bp.models.parm.ParmModel" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="SEGMENT" property="segment" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="SHORT_DESC" property="shortDesc" jdbcType="VARCHAR" />
    <result column="LONG_DESC" property="longDesc" jdbcType="VARCHAR" />
    <result column="PARM_VALUE" property="value" jdbcType="VARCHAR" />
    <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" />
    <result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="LAST_UPDATED_BY" property="lastUpdatedBy" jdbcType="VARCHAR" />
    <result column="LAST_UPDATED_DATE" property="lastUpdatedDate" jdbcType="TIMESTAMP" />
    <result column="MALL_ID" property="mallId" jdbcType="DECIMAL" />
    <result column="DISP_SEQ" property="dispSeq" jdbcType="DECIMAL" />
    
    <result column="DATA_TOTAL"		property="dataTotal"	jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, SEGMENT, CODE, SHORT_DESC, LONG_DESC,PARM_VALUE, CREATED_BY, CREATED_DATE, LAST_UPDATED_BY, 
    LAST_UPDATED_DATE, MALL_ID, DISP_SEQ
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from SYS_PARM
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <select id="selectSegmentList" resultMap="BaseResultMap">
  		select distinct segment from sys_parm 
  		where MALL_ID = #{mallId, jdbcType=DECIMAL}
  		order by segment
  </select>
  <select id="selectByCriteria" resultMap="BaseResultMap" parameterType="com.mall.b2bp.models.parm.ParmModel" >
    select 
    <include refid="Base_Column_List" />
    from SYS_PARM
    where SEGMENT = #{segment, jdbcType=VARCHAR}
    <if test="id != null" >
     	AND ID = #{id, jdbcType=DECIMAL}
    </if>
    <if test="code != null" >
    	AND CODE = #{code, jdbcType=VARCHAR}
    </if>
    <if test="mallId != null" >
       	AND MALL_ID = #{mallId, jdbcType=DECIMAL}
    </if>
    order by SEGMENT,DISP_SEQ
  </select>
  
  <select id="search" resultMap="BaseResultMap" parameterType="com.mall.b2bp.models.parm.ParmModel" >
  		select * from(
			select t.*, ROWNUM row_num from(
			    select 
			    	count(*)over () DATA_TOTAL,
			    <include refid="Base_Column_List" />
			 	from  SYS_PARM b 
			    where b.SEGMENT = #{segment, jdbcType=VARCHAR}
			       <if test="id != null" >
			     	AND ID = #{id, jdbcType=DECIMAL}
			    </if>
			    <if test="code != null" >
			    	AND CODE = #{code, jdbcType=VARCHAR}
			    </if>
			    <if test="mallId != null" >
			       	AND MALL_ID = #{mallId, jdbcType=DECIMAL}
			    </if>
				order by SEGMENT,DISP_SEQ
				) t
			) temp
		where temp.row_num between #{startRow, jdbcType=INTEGER} and #{endRow, jdbcType=INTEGER}
  	</select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from SYS_PARM
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.mall.b2bp.models.parm.ParmModel" >
    insert into SYS_PARM (ID, SEGMENT, CODE, 
      SHORT_DESC, LONG_DESC,PARM_VALUE, CREATED_BY, 
      CREATED_DATE, LAST_UPDATED_BY, LAST_UPDATED_DATE, 
      MALL_ID, DISP_SEQ)
    values (#{id,jdbcType=DECIMAL}, #{segment,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{shortDesc,jdbcType=VARCHAR}, #{longDesc,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=VARCHAR}, #{lastUpdatedDate,jdbcType=TIMESTAMP}, 
      #{mallId,jdbcType=DECIMAL}, #{dispSeq,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.mall.b2bp.models.parm.ParmModel" >
  <selectKey keyProperty="id" resultType="java.math.BigDecimal" order="BEFORE">
  	select sys_parm_seq.nextval from dual
  </selectKey>
    insert into SYS_PARM
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="segment != null" >
        SEGMENT,
      </if>
      <if test="code != null" >
        CODE,
      </if>
      <if test="shortDesc != null" >
        SHORT_DESC,
      </if>
      <if test="longDesc != null" >
        LONG_DESC,
      </if>
      <if test="value != null" >
        PARM_VALUE,
      </if>
      <if test="createdBy != null" >
        CREATED_BY,
      </if>
      <if test="createdDate != null" >
        CREATED_DATE,
      </if>
      <if test="lastUpdatedBy != null" >
        LAST_UPDATED_BY,
      </if>
      <if test="lastUpdatedDate != null" >
        LAST_UPDATED_DATE,
      </if>
      <if test="mallId != null" >
        MALL_ID,
      </if>
      <if test="dispSeq != null" >
        DISP_SEQ,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="segment != null" >
        #{segment,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="shortDesc != null" >
        #{shortDesc,jdbcType=VARCHAR},
      </if>
      <if test="longDesc != null" >
        #{longDesc,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        #{lastUpdatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedDate != null" >
        #{lastUpdatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mallId != null" >
        #{mallId,jdbcType=DECIMAL},
      </if>
      <if test="dispSeq != null" >
        #{dispSeq,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.b2bp.models.parm.ParmModel" >
    update SYS_PARM
    <set >
      <if test="segment != null" >
        SEGMENT = #{segment,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="shortDesc != null" >
        SHORT_DESC = #{shortDesc,jdbcType=VARCHAR},
      </if>
      <if test="longDesc != null" >
        LONG_DESC = #{longDesc,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        PARM_VALUE = #{value,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        LAST_UPDATED_BY = #{lastUpdatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedDate != null" >
        LAST_UPDATED_DATE = #{lastUpdatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mallId != null" >
        MALL_ID = #{mallId,jdbcType=DECIMAL},
      </if>
      <if test="dispSeq != null" >
        DISP_SEQ = #{dispSeq,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mall.b2bp.models.parm.ParmModel" >
    update SYS_PARM
    set SEGMENT = #{segment,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR},
      SHORT_DESC = #{shortDesc,jdbcType=VARCHAR},
      LONG_DESC = #{longDesc,jdbcType=VARCHAR},
      PARM_VALUE = #{value,jdbcType=VARCHAR},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      LAST_UPDATED_BY = #{lastUpdatedBy,jdbcType=VARCHAR},
      LAST_UPDATED_DATE = #{lastUpdatedDate,jdbcType=TIMESTAMP},
      MALL_ID = #{mallId,jdbcType=DECIMAL},
      DISP_SEQ = #{dispSeq,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>